services:
    auth-postgres:
        env_file: "../.env"
        image: postgres:alpine
        container_name: ${AUTH_POSTGRES_HOSTNAME}
        hostname: ${AUTH_POSTGRES_HOSTNAME}
        environment:
            POSTGRES_DB: ${AUTH_POSTGRES_DB}
            POSTGRES_USER: ${AUTH_POSTGRES_USER}
            POSTGRES_PASSWORD: ${AUTH_POSTGRES_PASSWORD}
        ports:
            - "${AUTH_POSTGRES_PORT}:5432"
        networks:
            - social365-network
        healthcheck:
            test: pg_isready -U postgres
            interval: 10s
            timeout: 10s
            retries: 10

    auth-service:
        env_file: "../.env"
        container_name: ${AUTH_SERVICE_HOSTNAME}
        image: ${AUTH_SERVICE_HOSTNAME}:dev
        hostname: ${AUTH_SERVICE_HOSTNAME}
        build:
            context: .
            dockerfile: Dockerfile.dev
        ports:
            - "${AUTH_SERVICE_PORT}:${AUTH_SERVICE_PORT}"
        volumes:
            - "./:/home/auth"
        healthcheck:
            test: [ "CMD", "curl", "--fail", "http://localhost:${AUTH_SERVICE_PORT}/actuator/health" ]
            start_period: 45s
            interval: 15s
            timeout: 15s
            retries: 15
        networks:
            - social365-network
        depends_on:
            auth-postgres:
                condition: service_healthy
            config-server:
                condition: service_healthy
            eureka-registry:
                condition: service_healthy
