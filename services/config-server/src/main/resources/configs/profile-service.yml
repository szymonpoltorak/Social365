server:
    port: ${PROFILE_SERVICE_PORT}

    servlet:
        context-path: /

    server-header: ""

    http2:
        enabled: true

    compression:
        enabled: true
        mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
        min-response-size: 512

openapi:
    service:
        title: Profile Service
        version: 1.0.0
        url: http://${API_GATEWAY_HOSTNAME}:${API_GATEWAY_PORT}

springdoc:
    api-docs:
        path: /${PROFILE_SERVICE_HOSTNAME}/v3/api-docs
    swagger-ui:
        path: /${PROFILE_SERVICE_HOSTNAME}/swagger-ui.html

logging:
    level:
        org.springframework.data.neo4j.cypher: ERROR

spring:
    neo4j:
        uri: ${NEO4J_URI}
        authentication:
            username: ${NEO4J_USERNAME}
            password: ${NEO4J_PASSWORD}

    cloud:
        refresh:
            enabled: false

    security:
        oauth2:
            resourceserver:
                jwt:
                    issuer-uri: http://${AUTH_SERVICE_HOSTNAME}:${AUTH_SERVICE_PORT}
                    jwk-set-uri: http://${AUTH_SERVICE_HOSTNAME}:${AUTH_SERVICE_PORT}/oauth2/jwks
                    jws-algorithms: ${JWS_ALGORITHM}

    kafka:
        producer:
            bootstrap-servers: ${KAFKA_BROKER_HOSTNAME}:${KAFKA_PORT}
            key-serializer: org.apache.kafka.common.serialization.StringSerializer
            value-serializer: org.apache.kafka.common.serialization.StringSerializer

kafka:
    topics:
        friendship-requested: ${KAFKA_FRIENDSHIP_REQUESTED_TOPIC}
        friendship-accepted: ${KAFKA_FRIENDSHIP_ACCEPTED_TOPIC}
        friendship-rejected: ${KAFKA_FRIENDSHIP_REJECTED_TOPIC}
        friendship-followed: ${KAFKA_FRIENDSHIP_FOLLOWED_TOPIC}

    group-ids:
        notifications: ${KAFKA_NOTIFICATIONS_GROUP_ID}

eureka:
    client:
        service-url:
            defaultZone: ${EUREKA_SERVER_URI}

        register-with-eureka: true
        fetch-registry: true

    instance:
        hostname: ${EUREKA_REGISTRY_HOSTNAME}
